#

# Leader
set -g prefix C-b
# c-b r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# c-b t
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24

# fiddle with colors of status bar
set -g status-fg black
set -g status-bg green

set -g status-left-length 85
set -g status-right '#[fg=cyan,bg=black] #[bg=cyan,fg=blacw] #H * #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")'




# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

bind j select-pane -L
bind n select-pane -D
bind p select-pane -U
bind k select-pane -R

# Splitting panes replace % and "
bind | split-window -h
bind - split-window -v

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r J resize-pane -L 5
bind -r N resize-pane -D 5
bind -r P resize-pane -U 5
bind -r K resize-pane -R 5


# color scheme (styled as vim-powerline)
set -g status-left-length 52
set -g status-right-length 451
set -g status-fg white
set -g status-bg colour234
set -g status-left '#[fg=colour235,bg=colour252,bold]  #[fg=colour252,bg=colour238,nobold] #[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]'
set -g window-status-format "#[fg=colour235,bg=colour252,bold] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39] #[fg=black,bg=colour39,noreverse,bold] #I: #W #[fg=colour39,bg=colour234,nobold]"
set -g window-style 'fg=colour82,bg=colour236'
set -g window-active-style 'fg=green,bg=black'


# Patch for OS X pbpaste and pbcopy under tmux.
#set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"




# Bigger history
set -g history-limit 10000


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "reloaded tmux\!"

#l scroll mode
slet-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

